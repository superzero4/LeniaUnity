#pragma kernel CSMain

RWTexture2D<float4> NoiseResult;

// Hash / noise functions
float2 hash(float2 p)
{
    p = float2(dot(p,float2(127.1f,311.7f)), dot(p,float2(269.5f,183.3f)));
    return -1.0f + 2.0f * frac(sin(p) * 43758.5453123f);
}

float noise(float2 p)
{
    const float k1 = 0.366025404f; // (sqrt(3)-1)/2;
    const float k2 = 0.211324865f; // (3-sqrt(3))/6;

    float2  i = floor(p + (p.x + p.y) * k1);
    float2  a = p - i + (i.x + i.y) * k2;
    float m = step(a.y, a.x);
    const float2 o = float2(m, 1.0f - m);
    const float2 b = a - o + k2;
    const float2 c = a - 1.0f + 2.0f * k2;
    const float3 h = max(0.5f - float3(dot(a,a), dot(b,b), dot(c,c) ), 0.0f);
    const float3 n = h * h * h * h * float3(dot(a,hash(i + 0.0f)), dot(b,hash(i + o)), dot(c,hash(i + 1.0f)));
    return dot(n, 70.0f);
}

[numthreads(8,8,1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
    NoiseResult[id.xy] = 0.013f + noise(float2(id.x, id.y));
}